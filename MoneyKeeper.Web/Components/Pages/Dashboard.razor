@page "/dashboard"
@using MoneyKeeper.Web.Services.Dashboard

<h3>Dashboard</h3>

<div class="row justify-content-center">
    <div class="col-lg-4">
        <div class="card text-center">
            <div class="card-header">Current Balance</div>
            <div class="card-body">
                <h1>@FormatCurrency(_currentBalance, _сurrencySymbol)</h1>
                <div class="mt-3 d-flex justify-content-between">
                    <button class="btn btn-primary me-2 rounded-pill">
                        <i class="bi bi-plus-circle"></i> Add Income
                    </button>
                    <button class="btn btn-danger me-2 rounded-pill">
                        <i class="bi bi-dash-circle"></i> Add Expense
                    </button>
                    <button class="btn btn-info me-2 rounded-pill">
                        <i class="bi bi-bar-chart"></i> View Report
                    </button>
                    <button class="btn btn-secondary me-2 rounded-pill">
                        <i class="bi bi-gear"></i> Settings
                    </button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">Accounts</div>
            <div class="card-body">
                <ul class="list-group">
                    @foreach (var account in _accounts)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <h5>@account.Name</h5>
                                <small>@account.CurrencyName</small>
                            </div>
                            <span>@FormatCurrency(account.Balance, account.CurrencySymbol)</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

@code {
    private decimal _currentBalance;
    private string _сurrencySymbol = "\u00a3";
    private List<Account> _accounts = [];

    [Inject] private IDashBoardService? DashBoardService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (DashBoardService != null)
        {
            var data = await DashBoardService.GetDashboardDataAsync();
            _currentBalance = data.CurrentBalance;
            _сurrencySymbol = data.Currency;
            _accounts = data.Accounts;
        }
    }

    private void AddIncome()
    {
// Logic to add income
    }

    private void AddExpense()
    {
// Logic to add expense
    }

    private void ViewReport()
    {
// Logic to view report
    }

    private void GoToSettings()
    {
// Logic to navigate to settings
    }

    private static string FormatCurrency(decimal amount, string currencySymbol) => $"{currencySymbol}{amount:N2}";
}